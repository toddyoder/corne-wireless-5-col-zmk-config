/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = < ... >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = < ... >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };

    macros {
        mo2_cmd_release: macro_mo2_cmd_release {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings 
            = <&macro_press &mo 2>
            , <&macro_pause_for_release>
            , <&macro_release &mo 1 &kp LGUI>
            ;
        };
        cmd_tab: macro_cmd_tab {
          compatible = "zmk,behavior-macro";
          label = "CMD_TAB";
          #binding-cells = <0>;
          bindings = <&kp LGUI &kp TAB>;
        };  
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  .  |  ,  |  P  |  Y  |  F  |     |  G  |  C   |  R   |  L  | ; |
// |  A  |  O  |  E  |  U  |  I  |     |  D  |  H   |  T   |  N  | S | 
// |  '  |  Q  |  J  |  K  |  X  |     |  B  |  M   |  W   |  V  | Z |
//             |  L3 |  L2 | ENT |     | SPC | BSPC |      |
                        display-name = "Base";
                        bindings = <
   AS(DOT)            AS(COMMA)           AS(P)           AS(Y)           AS(F)     AS(G)   AS(C)           AS(R)              AS(L)               &kp SEMI
   &hml LSHIFT A      &hml LCTRL O        &hml LALT E     &hml LGUI U     AS(I)     AS(D)   &hmr RGUI H     &hmr RALT T        &hmr RCTRL N        &hmr RSHIFT S
   AS(SQT)            AS(Q)               AS(J)           AS(K)           AS(X)     AS(B)   AS(M)           AS(W)              AS(V)               AS(Z)
                                          &mo 3        &mo2_cmd_release   &lt 1 RET     &mt RSHIFT SPACE     &kp BSPC      &none
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |     | mLFT | UP  | Pdsk | Ndsk |             |     |  7   |  8  |  9  |  /  |
// |     | LFT  | DWN | RGT  | mRGT |             |  =  |  4   |  5  |  6  |  .  |
// | cut | copy | pst | undo | redo |             |     |  1   |  2  |  3  |  -  |
//              |     |      |      |             |  0  | BSPC |     |
                        display-name = "Number";
                        bindings = <
   &none      &kp LG(LEFT)  &kp UP      &kp LC(LEFT) &kp LC(RIGHT)      &none        &kp N7    &kp N8    &kp N9     &kp SLASH
   &kp LSHIFT &kp LEFT      &kp DOWN    &kp RIGHT    &kp LG(RIGHT)      &kp EQUAL    &kp N4    &kp N5    &kp N6     &kp DOT
   &kp LG(X)  &kp LG(C)     &kp LG(V)   &kp LG(Z)    &kp LS(LG(Z))      &none        &kp N1    &kp N2    &kp N3     &kp MINUS
                            &none       &none        &none              &kp N0       &kp BSPC      &none
                        >;
                };


               symbol_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  ~  |     |   \  |     |             |     |     |     |     |     |
// |     |  `  |  [  |   ]  |     |             |     |     |     |     |     |
// |     |     | TAB | PIPE |     |             |     |     |     |     |     |
//             |     |      |     |             |     |     |     |
                        display-name = "Symbol";
                        bindings = <
   &none            &kp TILDE         &none            &kp BSLH         &none              &none       &none       &none        &none        &none
   &kp LSHIFT       &mt LCTRL GRAVE   &mt LALT LBKT    &mt LGUI RBKT    &none              &kp RGUI    &kp RALT    &kp RCTRL    &kp RSHIFT   &none
   &none            &none             &kp TAB          &kp PIPE         &none              &none       &none       &none        &none        &none
                                      &none            &none            &none              &none       &none       &none
                        >;
                };

              nav_layer {
// -----------------------------------------------------------------------------------------
// |    |      | Papp | Napp |      |             |     |     |     |     |     |
// |    |      | Ptab | Ntab |      |             |     |     |     |     |     |
// |    |      | Pwin | Nwin |      |             |     |     |     |     |     |
//             |      |      |      |             |     |     |     |
                        display-name = "Nav";
                        bindings = <
   &none   &none   &kp LS(LG(TAB))    &none       &none              &none    &none    &none    &none    &none
   &none   &none   &kp LS(LC(TAB))    &kp LC(TAB)    &none              &none    &none    &none    &none    &none
   &none   &none   &kp LS(LA(TAB))    &kp LA(TAB)    &none              &none    &none    &none    &none    &none
                   &none              &none          &none              &none    &none    &none
                        >;
                };

               new_layer {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |             |     |     |     |     |     |
// |    |     |     |     |     |             |     |     |     |     |     |
// |    |     |     |     |     |             |     |     |     |     |     |
//            |     |     |     |             |     |     |     |
                        display-name = "New";
                        bindings = <
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
                   &none    &none    &none              &none    &none    &none
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               | GUI |     | SPC |     | ENT | ESC | TAB |
                        display-name = "Lower";
                        bindings = <
   &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT        &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &trans 
   &bt BT_CLR   &trans       &trans       &trans       &trans           &trans    &trans    &trans          &trans    &trans 
                             &kp LGUI     &trans       &kp SPACE        AS(RET)   &kp ESC   &kp TAB
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
// | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
//            | GUI | ESC | SPC |     | ENT |     | TAB |
                        display-name = "Raise";
                        bindings = <

   AS(N1)    AS(N2)    AS(N3)    AS(N4)    AS(N5)        AS(N6)    AS(N7)    AS(N8)    AS(N9)   AS(N0)
   AS(MINUS) AS(EQUAL) &kp LBRC  &kp LBKT  &kp LPAR      &kp RPAR  &kp RBKT  &kp RBRC  AS(FSLH) AS(BSLH)
   AS(GRAVE) &trans    &trans    AS(COMMA) &kp COLON     &kp SEMI  AS(DOT)   &kp LCTRL &kp RALT &trans
                       &kp LGUI  &kp ESC   &kp SPACE     AS(RET)   &trans    &kp TAB
                        >;
                };

                extra_1 {
                        status = "reserved";
                };

                extra_2 {
                        status = "reserved";
                };

                extra_3 {
                        status = "reserved";
                };
        };
};