/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = < ... >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = < ... >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };

    macros {
        mo2_cmd_release: macro_mo2_cmd_release {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings 
            = <&macro_press &mo 2>
            , <&macro_pause_for_release>
            , <&macro_release &mo 2 &kp LGUI>
            ;
        };
        cmd_tab: macro_cmd_tab {
          compatible = "zmk,behavior-macro";
          label = "CMD_TAB";
          #binding-cells = <0>;
          bindings = <&kp LGUI &kp TAB>;
        };  
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  .> |  ,< |  P  |  Y  |  F  |     |  G  |  C   |  R   |  L  | ;: |
// |  A  |  O  |  E  |  U  |  I  |     |  D  |  H   |  T   |  N  | S  | 
// |  '" |  Q  |  J  |  K  |  X  |     |  B  |  M   |  W   |  V  | Z  |
//             |  L3 |  L2 | ENT |     | SPC | BSPC |  DEL |
                        display-name = "Base";
                        bindings = <
   AS(DOT)            AS(COMMA)           AS(P)           AS(Y)           AS(F)     AS(G)      AS(C)         AS(R)          AS(L)           &kp SEMI
   &hml LSHIFT A      &hml LCTRL O        &hml LALT E     &hml LGUI U     AS(I)     AS(D)      &hmr RGUI H   &hmr RALT T    &hmr RCTRL N    &hmr RSHIFT S
   AS(SQT)            AS(Q)               AS(J)           AS(K)           AS(X)     AS(B)      AS(M)         AS(W)          AS(V)           AS(Z)
                                          &mo 3           &mo 2          &lt 1 RET  &mt RSHIFT SPACE    &kp BSPC      &kp DEL
                        >;
                };

                number_layer1 {
// -----------------------------------------------------------------------------------------
// | ESC | mLFT | UP  | Pdsk | Ndsk |             |    |  7&  |  8* | 9( | /? |
// | TAB | LFT  | DWN | RGT  | mRGT |             | =+ |  4$  |  5% | 6^ | .  |
// | cut | copy | pst | undo | redo |             |    |  1!  |  2@ | 3# | -_ |
//              |     |      |      |             | 0) | BSPC | DEL |
                        display-name = "Number";
                        bindings = <
   &kp ESCAPE      &kp LG(LEFT)  &kp UP      &kp LC(LEFT) &kp LC(RIGHT)      &none              &kp N7          &kp N8           &kp N9           &kp SLASH
   &hml LSHIFT TAB &kp LEFT      &kp DOWN    &kp RIGHT    &kp LG(RIGHT)      &hmr RGUI EQUAL    &hmr RALT N4    &hmr RCTRL N5    &hmr RSHIFT N6   &kp DOT
   &kp LG(X)       &kp LG(C)     &kp LG(V)   &kp LG(Z)    &kp LS(LG(Z))      &none              &kp N1          &kp N2           &kp N3           &kp MINUS
                                 &none       &none        &none              &lt 4 N0           &kp BSPC        &kp DEL
                        >;
                };

               sym_nav_mus_layer2 {
// -----------------------------------------------------------------------------------------
// |      |      | TAB  | volU | volU |             |     |  [   |  ]  |  ~  |     |
// | musP | Ptab | Ntab | PLAY | musN |             |     |  {   |  }  |  `  |     |
// |      | Pwin | Nwin | volD | volD |             |     | PIPE |  \  |     |     |
//               |      |      |      |             | SPC | BSPC | DEL |
                        display-name = "Nav/Music/Sym";
                        bindings = <
   &none       &none             &kp TAB       &mt LGUI C_VOL_UP  &kp LC(LA(LS(U)))  &none            &kp LBKT      &kp RBKT       &kp TILDE         &none
   &kp C_PREV  &kp LS(LC(TAB))   &kp LC(TAB)   &kp C_PLAY_PAUSE   &kp C_NEXT         &kp RGUI         &mt RALT LBRC &mt RCTRL RBRC &mt RSHIFT GRAVE  &none
   &none       &kp LS(LA(TAB))   &kp LA(TAB)   &kp C_VOL_DN       &kp LC(LA(LS(J)))  &none            &kp PIPE      &kp BSLH       &none             &none
                                 &none         &none              &none              &mt RSHIFT SPACE &kp BSPC      &kp DEL
                        >;
                };

                music_layer3 {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |             |     |     |     |     |     |
// |    |     |     |     |     |             |     |     |     |     |     |
// |    |     |     |     |     |             |     |     |     |     |     |
//            |     |     |     |             |     |     |     |
                        display-name = "Music";
                        bindings = <
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
                   &none    &none    &none              &none    &none    &none
                        >;
                };

                mouse_layer4 {
// -----------------------------------------------------------------------------------------
// |    |      |  UP  |       |     |             |      |       |  sUP  |        |     |
// |    | LEFT | DOWN | RIGHT |     |             |      | sLEFT | sDOWN | sRIGHT |     |
// |    |      |      |       |     |             |      |       |       |        |     |
//             |      |       |     |             | Lclk | Rclk  |       |
                        display-name = "Mouse";
                        bindings = <
   &none   &none          &mmv MOVE_UP   &none           &none         &none &none          &msc SCRL_UP   &none           &none
   &none   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none         &none &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_RIGHT &none
   &none   &none          &none          &none           &none         &none &none          &none          &none           &none
                          &none          &none           &none         &mkp MB1             &mkp MB2       &none
                        >;
                };

                bluetooth_layer5 {
// -----------------------------------------------------------------------------------------
// |       |     |     |     |     |     |     |     |     |     |     |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     |     |     |     |     |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               |     |     |     |     |     |     |     |
                        display-name = "Bluetooth";
                        bindings = <
   &none     &none       &none     &none     &none        &none   &none  &none   &none  &none
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &none  &none  &none   &none
   &bt BT_CLR   &none       &none       &none       &none           &none    &none    &none    &none   &none
                             &none      &none      &none            &none   &none    &none
                        >;
                };

                new_layer {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |             |     |     |     |     |     |
// |    |     |     |     |     |             |     |     |     |     |     |
// |    |     |     |     |     |             |     |     |     |     |     |
//            |     |     |     |             |     |     |     |
                        display-name = "New";
                        bindings = <
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
   &none   &none   &none    &none    &none              &none    &none    &none    &none    &none
                   &none    &none    &none              &none    &none    &none
                        >;
                };

                extra_1 {
                        status = "reserved";
                };

                extra_2 {
                        status = "reserved";
                };

                extra_3 {
                        status = "reserved";
                };
        };
};